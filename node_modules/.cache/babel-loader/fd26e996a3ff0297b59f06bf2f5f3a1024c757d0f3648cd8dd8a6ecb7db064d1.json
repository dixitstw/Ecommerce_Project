{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport { ADD_TO_CART, EMPTY_CART, REMOVE_FROM_CART } from \"./cartConstants\";\nconst initial_data = {\n  cart_items: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial_data;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_TO_CART:\n      let item = action.payload;\n      let itemExists = state.cart_items.find(cart_item => cart_item._id === item._id);\n      if (itemExists) {\n        Swal.fire({\n          \"title\": \"Warning\",\n          \"text\": \"Item already in cart\",\n          \"icon\": \"Warning\",\n          \"timer\": 3000\n        });\n        return {\n          ...state,\n          cart_items: [...state.cart_items]\n        };\n      } else {\n        Swal.fire({\n          \"title\": \"Success\",\n          \"text\": \"Item added in cart\",\n          \"icon\": \"Success\",\n          \"timer\": 3000\n        });\n        return {\n          ...state,\n          cart_items: [...state.cart_items, item]\n        };\n      }\n      break;\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        cart_items\n      };\n      break;\n    case EMPTY_CART:\n      return {\n        ...state,\n        cart_items: []\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["Swal","ADD_TO_CART","EMPTY_CART","REMOVE_FROM_CART","initial_data","cart_items","cartReducer","state","action","type","item","payload","itemExists","find","cart_item","_id","fire"],"sources":["/home/dipti/Codes/Dursikshya 1-2/REACT/ecommerce React main/src/Components/reducer/cartReducer.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\nimport { ADD_TO_CART, EMPTY_CART, REMOVE_FROM_CART } from \"./cartConstants\";\n\nconst initial_data = {\n    cart_items: []\n}\n\nexport const cartReducer = (state = initial_data, action)=> {\n    switch(action.type){\n        case ADD_TO_CART:\n            let item = action.payload\n            let itemExists = state.cart_items.find(cart_item => cart_item._id===item._id)\n            if(itemExists){\n                Swal.fire({\n                    \"title\": \"Warning\",\n                    \"text\": \"Item already in cart\",\n                    \"icon\": \"Warning\",\n                    \"timer\": 3000,\n                    \n                })\n                return {...state, cart_items:[...state.cart_items]}\n\n            }\n            else {\n                Swal.fire({\n                    \"title\": \"Success\",\n                    \"text\": \"Item added in cart\",\n                    \"icon\": \"Success\",\n                    \"timer\": 3000,\n                    \n                })\n                return {...state, cart_items:[...state.cart_items, item]}\n\n            }\n            break\n\n        case REMOVE_FROM_CART:\n            return {...state,\n            cart_items}\n            break\n        case EMPTY_CART:\n            return {\n        ...state, cart_items: [] \n        }\n        default:\n            return state\n    }\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,SAASC,WAAW,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,iBAAiB;AAE3E,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,YAAiC;EAAA,IAAhCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EACpD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKR,WAAW;MACZ,IAAIS,IAAI,GAAGF,MAAM,CAACG,OAAO;MACzB,IAAIC,UAAU,GAAGL,KAAK,CAACF,UAAU,CAACQ,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,GAAG,KAAGL,IAAI,CAACK,GAAG,CAAC;MAC7E,IAAGH,UAAU,EAAC;QACVZ,IAAI,CAACgB,IAAI,CAAC;UACN,OAAO,EAAE,SAAS;UAClB,MAAM,EAAE,sBAAsB;UAC9B,MAAM,EAAE,SAAS;UACjB,OAAO,EAAE;QAEb,CAAC,CAAC;QACF,OAAO;UAAC,GAAGT,KAAK;UAAEF,UAAU,EAAC,CAAC,GAAGE,KAAK,CAACF,UAAU;QAAC,CAAC;MAEvD,CAAC,MACI;QACDL,IAAI,CAACgB,IAAI,CAAC;UACN,OAAO,EAAE,SAAS;UAClB,MAAM,EAAE,oBAAoB;UAC5B,MAAM,EAAE,SAAS;UACjB,OAAO,EAAE;QAEb,CAAC,CAAC;QACF,OAAO;UAAC,GAAGT,KAAK;UAAEF,UAAU,EAAC,CAAC,GAAGE,KAAK,CAACF,UAAU,EAAEK,IAAI;QAAC,CAAC;MAE7D;MACA;IAEJ,KAAKP,gBAAgB;MACjB,OAAO;QAAC,GAAGI,KAAK;QAChBF;MAAU,CAAC;MACX;IACJ,KAAKH,UAAU;MACX,OAAO;QACX,GAAGK,KAAK;QAAEF,UAAU,EAAE;MACtB,CAAC;IACD;MACI,OAAOE,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}