{"ast":null,"code":"const {\n  API\n} = require(\"../../config\");\nexport const getAllProducts = () => {\n  return fetch(`${API}/getallproducts`).then(res => res.json()).catch(err => console.log(err));\n};\nexport const addProduct = (product, token) => {\n  return fetch(`${API}/addproduct`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(res => res.json()).catch(err => console.log(err));\n};\nexport const productDetails = id => {\n  return fetch(`${API}/getproductdetails/${id}`).then(res => res.json()).catch(err => console.log(err));\n};\nexport const updateProduct = (id, product, token) => {\n  return fetch(`${API}/updateproduct/${id}`, {\n    method: \"PUT\",\n    headers: {\n      authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(res => res.json()).catch(err => console.log(err));\n};\nexport const getFiltereProducts = filter => {\n  return fetch(`${API}/getfilteredproducts`), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n};","map":{"version":3,"names":["API","require","getAllProducts","fetch","then","res","json","catch","err","console","log","addProduct","product","token","method","headers","authorization","body","productDetails","id","updateProduct","getFiltereProducts","filter"],"sources":["/home/dipti/Codes/Dursikshya 1-2/REACT/ecommerce React main/src/Components/api/productAPI.js"],"sourcesContent":["const { API } = require(\"../../config\")\n\nexport const getAllProducts = () => {\n    return fetch(`${API}/getallproducts`)\n    .then(res=>res.json())\n    .catch(err=>console.log(err))\n}\n\nexport const addProduct = (product, token) => {\n    return fetch (`${API}/addproduct`, {\n        method: \"POST\",\n        headers: {\n            authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n    .then(res=>res.json())\n    .catch(err=>console.log(err))\n}\n\nexport const productDetails = (id) => {\n    return fetch (`${API}/getproductdetails/${id}`)\n    .then(res=>res.json())\n    .catch(err=>console.log(err))\n}\n\nexport const updateProduct = (id, product, token) => {\n    return fetch (`${API}/updateproduct/${id}`, {\n        method: \"PUT\",\n        headers: {\n            authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n    .then(res=>res.json())\n    .catch(err=>console.log(err))\n}\n\nexport const getFiltereProducts = (filter) => {\n    return fetch(`${API}/getfilteredproducts`), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        \n\n    }\n}"],"mappings":"AAAA,MAAM;EAAEA;AAAI,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEvC,OAAO,MAAMC,cAAc,GAAG,MAAM;EAChC,OAAOC,KAAK,CAAE,GAAEH,GAAI,iBAAgB,CAAC,CACpCI,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,CAACC,OAAO,EAAEC,KAAK,KAAK;EAC1C,OAAOV,KAAK,CAAG,GAAEH,GAAI,aAAY,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC,CAAC;IACDI,IAAI,EAAEL;EACV,CAAC,CAAC,CACDR,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMU,cAAc,GAAIC,EAAE,IAAK;EAClC,OAAOhB,KAAK,CAAG,GAAEH,GAAI,sBAAqBmB,EAAG,EAAC,CAAC,CAC9Cf,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMY,aAAa,GAAG,CAACD,EAAE,EAAEP,OAAO,EAAEC,KAAK,KAAK;EACjD,OAAOV,KAAK,CAAG,GAAEH,GAAI,kBAAiBmB,EAAG,EAAC,EAAE;IACxCL,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC,CAAC;IACDI,IAAI,EAAEL;EACV,CAAC,CAAC,CACDR,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMa,kBAAkB,GAAIC,MAAM,IAAK;EAC1C,OAAOnB,KAAK,CAAE,GAAEH,GAAI,sBAAqB,CAAC,EAAE;IACxCc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EAGJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}